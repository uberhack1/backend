// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UberHack.API.Repository;

namespace UberHack.API.Migrations
{
    [DbContext(typeof(UberHackDbContext))]
    [Migration("20190707085134_tipoChat")]
    partial class tipoChat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("UberHack.API.Entities.Bairro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Bairro");
                });

            modelBuilder.Entity("UberHack.API.Entities.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<int>("TipoChat");

                    b.HasKey("Id");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("UberHack.API.Entities.ChatUsuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChatId");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ChatUsuarios");
                });

            modelBuilder.Entity("UberHack.API.Entities.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("UberHack.API.Entities.Faculdade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Faculdade");
                });

            modelBuilder.Entity("UberHack.API.Entities.Mensagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChatId");

                    b.Property<string>("Conteudo");

                    b.Property<DateTime>("DataHora");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Mensagem");
                });

            modelBuilder.Entity("UberHack.API.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BairroCasaId");

                    b.Property<string>("Bio");

                    b.Property<string>("Cpf");

                    b.Property<string>("Email");

                    b.Property<int>("EmpresaId");

                    b.Property<int?>("FaculdadeId");

                    b.Property<string>("Foto");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.HasIndex("BairroCasaId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FaculdadeId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("UberHack.API.Entities.ChatUsuarios", b =>
                {
                    b.HasOne("UberHack.API.Entities.Chat", "Chat")
                        .WithMany("ChatUsuarios")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UberHack.API.Entities.Usuario", "Usuario")
                        .WithMany("ChatUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UberHack.API.Entities.Mensagem", b =>
                {
                    b.HasOne("UberHack.API.Entities.Chat", "Chat")
                        .WithMany("Mensagens")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UberHack.API.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UberHack.API.Entities.Usuario", b =>
                {
                    b.HasOne("UberHack.API.Entities.Bairro", "BairroCasa")
                        .WithMany()
                        .HasForeignKey("BairroCasaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UberHack.API.Entities.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UberHack.API.Entities.Faculdade", "Faculdade")
                        .WithMany()
                        .HasForeignKey("FaculdadeId");
                });
#pragma warning restore 612, 618
        }
    }
}
